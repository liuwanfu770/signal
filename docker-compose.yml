networks:
  backend-network:
  db-network:
  signal-network:
    name: signal-network

services:
  backend:
    build:
      context: ./backend
      # 如果有单独的 Dockerfile，可通过:
      # dockerfile: DockerfileBackend
    ports:
      - "127.0.0.1:${PORT}:${PORT}"
    volumes:
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
      - backend_data:/app/data
    depends_on:
      - db
      - signal-api
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SIGNAL_CLI_URL: ${SIGNAL_CLI_URL}
      JWT_SECRET: ${JWT_SECRET}
    command: node src/index.js
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
      - db-network
      - signal-network

  db:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db-network

  signal-api:
    # 在项目根目录使用自定义 Dockerfile
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      MODE: native
      SIGNAL_CLI_REST_API_PORT: 8080
      AUTO_RECEIVE_SCHEDULE: "*/5 * * * *"
      WEBHOOK_URL: "http://backend:4000/v1/webhook"
    volumes:
      - signal-data:/home/.local/share/signal-cli
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - signal-network

volumes:
  backend_logs:
  backend_uploads:
  backend_data:
  postgres-data:
  signal-data:
    name: signal-data
